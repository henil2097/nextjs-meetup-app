{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pateh1/Desktop/ReactApps/nextjs-meetup-app/pages/index.js\";\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport MeetupList from \"../components/meetups/MeetupList\"; // our-domain.com/\n\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"\",\n  address: \"Some Address 5, 12345 some city\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"\",\n  address: \"Some Address 10, 12345 some city\",\n  description: \"This is a second meetup!\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getStaticProps = async () => {\n  // fetch data from API\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    },\n    revalidate: 10\n  }; // always returns an object\n}; // export const getStaticProps = async () => {\n//   // fetch data from API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//     revalidate: 10,\n//   }; // always returns an object\n// };\n\nexport default HomePage;\n/*\nUsing getStaticProps() or getServerSideProps() will no longer needed useEffect and useState for fetching and setting data\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //   useEffect(() => {\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  //   }, []);\n\n\n---------------- Some basic info on getStaticProps() and getServerSideProps() -------------------\nReserved method in nextjs to get static content/data before rendering the page\nso that the current component page gets executed and rendered with required data\n\nNeeded getStaticProps method, so that when the component page is loaded and rendered,\nit contains the data which will be used by SEO(Search engine optimization) and able to search throught the page\n\nAlso, this method will be called during the build process of production.\nThat means, it doesn't runs on the client side nor on the server side\n\n{revalidate: <seconds>}, prop unlocks the incremental generation of the static content/data for the component page,\nso that if data changes after build, we will get the latest data and not the outdated one which is generated while build\n\nrevalidate prop accepts the seconds and it will re-generate the static content after every seconds given if there are incoming requests for it\nand replaces the old generated page with new one\n\n\n---------------- Some basic info on getServerSideProps() -------------------\nThe difference between getServer\n\n*/","map":{"version":3,"sources":["/Users/pateh1/Desktop/ReactApps/nextjs-meetup-app/pages/index.js"],"names":["useEffect","useState","Layout","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","revalidate"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CAEA;;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,EAHT;AAIEC,EAAAA,OAAO,EAAE,iCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EAAE,EAHT;AAIEC,EAAAA,OAAO,EAAE,kCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARoB,CAAtB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER;AADJ,KADF;AAILU,IAAAA,UAAU,EAAE;AAJP,GAAP,CAFwC,CAOrC;AACJ,CARM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeJ,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n// our-domain.com/\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"A First Meetup\",\n    image: \"\",\n    address: \"Some Address 5, 12345 some city\",\n    description: \"This is a first meetup!\",\n  },\n  {\n    id: \"m2\",\n    title: \"A Second Meetup\",\n    image: \"\",\n    address: \"Some Address 10, 12345 some city\",\n    description: \"This is a second meetup!\",\n  },\n];\n\nconst HomePage = (props) => {\n  return <MeetupList meetups={props.meetups} />;\n};\n\nexport const getStaticProps = async () => {\n  // fetch data from API\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n    revalidate: 10,\n  }; // always returns an object\n};\n\n// export const getStaticProps = async () => {\n//   // fetch data from API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//     revalidate: 10,\n//   }; // always returns an object\n// };\n\nexport default HomePage;\n\n/*\nUsing getStaticProps() or getServerSideProps() will no longer needed useEffect and useState for fetching and setting data\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //   useEffect(() => {\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  //   }, []);\n\n\n---------------- Some basic info on getStaticProps() and getServerSideProps() -------------------\nReserved method in nextjs to get static content/data before rendering the page\nso that the current component page gets executed and rendered with required data\n\nNeeded getStaticProps method, so that when the component page is loaded and rendered,\nit contains the data which will be used by SEO(Search engine optimization) and able to search throught the page\n\nAlso, this method will be called during the build process of production.\nThat means, it doesn't runs on the client side nor on the server side\n\n{revalidate: <seconds>}, prop unlocks the incremental generation of the static content/data for the component page,\nso that if data changes after build, we will get the latest data and not the outdated one which is generated while build\n\nrevalidate prop accepts the seconds and it will re-generate the static content after every seconds given if there are incoming requests for it\nand replaces the old generated page with new one\n\n\n---------------- Some basic info on getServerSideProps() -------------------\nThe difference between getServer\n\n*/\n"]},"metadata":{},"sourceType":"module"}